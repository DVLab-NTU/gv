// If module CHIP has sth wrong,
// the program will output an error message, 
// and then TestBed will notice sth wrong.
// a : # never      branch
// b : # interleave branch
// c : # always     branch

13_00_00_00 // 000000000000_00000_000_00000_0010011    //0x00// nop
13_04_A0_00 // 000000001010_00000_000_01000_0010011    //0x04// addi x8  x0  0x00A           // a = 10
93_04_40_01 // 000000010100_00000_000_01001_0010011    //0x08// addi x9  x0  0x014           // b = 20
13_05_E0_01 // 000000011110_00000_000_01010_0010011    //0x0C// addi x10 x0  0x01E           // c = 30
93_05_00_00 // 000000000000_00000_000_01011_0010011    //0x10// addi x11 x0  0x000
13_06_00_00 // 000000000000_00000_000_01100_0010011    //0x14// addi x12 x0  0x000
93_06_00_00 // 000000000000_00000_000_01101_0010011    //0x18// addi x13 x0  0x000
93_85_15_00 // 000000000001_01011_000_01011_0010011    //0x1C// addi x11 x11 0x001           // Part_A
63_06_B4_00 // 0_000000_01011_01000_000_0100_0_1100011 //0x20// beq  x8  x11 0x004 (to 0x28) // to Part_A_end
6F_F0_9F_FF // 1_1111111100_1_11111111_00000_1101111   //0x24// jal  x0  0xFFFFC (to 0x1C)   // to Part_A
19_07_B4_40 // 0100000_01011_01000_000_01110_0110011   //0x28// sub  x14 x8  x11             // Part_A_end
23_20_E0_00 // 0000000_01110_00000_010_00000_0100011   //0x2C// sw   x14 x0  0x000
13_06_16_00 // 000000000001_01100_000_01100_0010011    //0x30// addi x12 x12 0x001           // Part_B
63_98_C4_00 // 0_000000_01100_01001_001_1000_0_1100011 //0x34// bne  x9  x12 0x008 (to 0x44) // to Part_B_end
33_87_C4_40 // 0100000_01100_01001_000_01110_0110011   //0x38// sub  x14 x9  x12
23_20_E0_00 // 0000000_01110_00000_010_00000_0100011   //0x3C// sw   x14 x0  0x000
6F_00_00_01 // 0_0000001000_0_00000000_00000_1101111   //0x40// jal  x0  0x00008 (to 0x50)   // to Part_C
63_18_B4_00 // 0_000000_01011_01000_001_1000_0_1100011 //0x44// bne  x8  x11 0x008 (to 0x4C) // Part_B_end, to Part_B_error
6F_F0_9F_FE // 1_1111110100_1_11111111_00000_1101111   //0x48// jal  x0  0xFFFF4 (to 0x30)   // to Part_B
23_20_80_00 // 0000000_01000_00000_010_00000_0100011   //0x4C// sw  x8  x0  0x000            // Part_B_error
93_86_16_00 // 000000000001_01101_000_01101_0010011    //0x50// addi x13 x13 0x001           // Part_C
E3_1E_D5_FE // 1_111111_01101_01010_001_1110_1_1100011 //0x54// bne  x10 x13 0xFFE (to 0x50) // to Part_C
B3_06_E5_40 // 0100000_01110_01010_000_01101_0110011   //0x58// sub  x14 x10 x13
23_20_E0_00 // 0000000_01110_00000_010_00000_0100011   //0x5C// sw   x14 x0  0x000