CSRCS	= $(wildcard *.cpp)
CHDRS	= $(wildcard *.h)
COBJS	= $(addsuffix .o, $(basename $(CSRCS)))
CDEPS	= $(addsuffix .d, $(basename $(CSRCS)))


INCDIR	= ../../include
DEPDIR	= -I. -I$(INCDIR)
LIBDIR	= ../../lib
LIBDEP	= $(LIBDIR)/lib.d
EXTLINK	= $(PKGNAME).d

CC	= g++
YOSYSCONF = yosys-config --exec --cxx --cxxflags
AR	= ar cr


ENGFLGS = -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS 
YOSYSFLGS = -D_YOSYS_ -DYOSYS_ENABLE_PLUGINS -DYOSYS_ENABLE_GLOB -DYOSYS_ENABLE_ZLIB -I/usr/include/tcl8.6 -DYOSYS_ENABLE_TCL -DYOSYS_ENABLE_ABC -DYOSYS_ENABLE_COVER
ABCFLGS = -DABC_USE_STDINT_H

CFLAGS	= $(ENGFLGS) $(PKGFLAG) -O3 -DNDEBUG -Wall -Wno-parentheses -Wno-unused-function 
CFLAGS	= $(ENGFLGS) $(PKGFLAG) -g -Wall -Wno-parentheses -Wno-unused-function
# DISABLE ALL WARNINGS
CFLAGS += -w -std=c++14
# PATH TO sim.so
CFLAGS += -DGV_SIMSO_PATH=\"$(SIM_FLAG)\"
SHELL = bash
OS  = $(shell uname -s)

ifeq ($(OS), Darwin)
	OSMACRO += -D__APPLE__
else
	OSMACRO += -D__linux__
endif

.PHONY: depend extheader

%.o:	%.cpp
	@echo "> compiling: $<"
	@$(CC) $(CFLAGS) $(YOSYSFLGS) $(ABCFLGS) $(OSMACRO) -I$(INCDIR) -c -o $@ $<

top:	$(EXTLINK) target
	@echo -n

clean:	
	@rm -f $(COBJS)
	@rm -f $(CDEPS)

## Make dependencies
depend: .depend.mak
.depend.mak: $(CSRCS) $(CHDRS)
	@echo Making dependencies ...
	@$(CC) -MM $(DEPDIR) $(YOSYSFLGS) $(ABCFLGS) $(CSRCS) > $@

## Linking external headers
extheader: .extheader.mak
.extheader.mak: $(EXTHDRS)
	@echo Linking external header files...
	@rm -f $@
	@echo -n "$(EXTLINK): " > $@
	@for hdr in $(EXTHDRS); \
	do \
		echo -n "$(INCDIR)/$$hdr " >> $@; \
		rm -f $(INCDIR)/$$hdr; \
	done
	@echo >> $@
	@for hdr in $(EXTHDRS); \
	do \
		echo "$(INCDIR)/$$hdr: $$hdr" >> $@; \
		echo "	@rm -f $(INCDIR)/$$hdr" >> $@; \
		echo "	@ln -fs ../src/$(PKGNAME)/$$hdr $(INCDIR)/$$hdr" >> $@; \
	done

include .depend.mak
include .extheader.mak
