13_00_00_00 // 000000000000_00000_000_00000_0010011                //0x00// nop
01_00_1D_A8 // 000_0_00000_00000_01    | 101_0_1_00_0_0_0_011_1_01 //0x04// c.nop                     | c.j    0x01B (to 0x3C)    // to Main
20_C3_82_80 // 110_000_110_0_1_000_00  | 100_0_00001_00000_10      //0x08// c.sw   x8  x14 0x10       | c.jr   x1                 // OutputTestPort | return
13_81_20_00 // 000000000010_00001_000_00010_0010011                //0x0C// addi   x2  x1  0x002                                  // Mult
04_43_48_43 // 010_000_110_0_0_001_00  | 010_000_110_1_0_010_00    //0x10// c.lw   x9  x14 0x00       | c.lw   x10 x14 0x01
BE_04_93_07 // 000_0_01001_01111_10    |_0_000_01111_0010011       //0x14// c.slli x9  x9  15         | addi   x15 x0  0x010
00_01_BA_86 // 000000010000_0000_______/ 100_0_01101_01110_10      //0x18// ...                       | c.mv   x13 x14
AA_85_85_89 // 100_0_01011_01010_10    | 100_0_10_011_00001_01     //0x1C// c.mv   x11 x10            | c.andi x11 x11 0x01       // MultLoop
3A_86_99_C1 // 100_0_01100_01110_10    | 110_0_00_011_00_11_0_01   //0x20// c.mv   x12 x14            | c.beqz x11 0x03 (to 0x28) // to End
33_06_96_00 // 0000000_01001_01100_000_01100_0110011               //0x24// add    x12 x12 x9
85_82_B2_96 // 100_0_00_101_00001_01   | 100_1_01101_01100_10      //0x28// c.srli x13 x13 1          | c.add  x13 x13 x12        // End
36_84_E9_3F // 100_0_01000_01101_10    | 001_1_1_11_1_1_1_101_0_01 //0x2C// c.mv   x8  x13            | c.jal  0x7ED (to 0x08)    // to OutputTestPort
05_81_FD_17 // 100_0_00_010_00001_01   | 000_1_01111_11111_01      //0x30// c.srli x10 x10 1          | c.addi x15 x15 0x3F
E5_F7_23_24 // 111_1_01_111_11_00_1_01 |_0_010_01000_0100011       //0x34// c.bnez x15 0xF4 (to 0x1C) | sw     x13 x0  0x008      // to MultLoop
D0_00_02_81 // 0000000_01101_0000______/ 100_0_00010_00000_10      //0x38// ...                       | c.jr   x2                 // return Mult
13_04_80_16 // 000101101000_00000_000_01000_0010011                //0x3C// addi   x8  x0  0x168                                  // Main
13_07_00_00 // 000000000000_00000_000_01110_0010011                //0x40// addi   x14 x0  0x000
EF_F0_5F_FC // 1_1111100010_1_11111111_00001_1101111               //0x44// jal    x1  0xFFFE2 (to 0x08)                          // to OutputTestPort
13_04_E0_0D // 000011011110_00000_000_01000_0010011                //0x48// addi   x8  x0  0x0DE
22_04_13_04 // 000_0_01000_01000_10    |_0_000_01000_0010011       //0x4C// c.slli x8  x8  8          | addi   x8  x8  0x0AD
D4_0A_23_20 // 000010101101_0100_______/_0_010_00000_0100011       //0x50// ...                       | sw     x8  x0 (0x000)
80_00_4D_3F // 0000000_01000_0000______/ 001_1_1_11_1_0_1_001_1_01 //0x54// ...                       | c.jal  0x7D9 (to 0x08)    // to OutputTestPort
13_04_60_0F // 000011110110_00000_000_01000_0010011                //0x58// addi   x8  x0  0x0F6
22_04_13_04 // 000_0_01000_01000_10    |_0_000_01000_0010011       //0x5C// c.slli x8  x8  8          | addi   x8  x8  0x025
54_02_23_22 // 000000100101_0100_______/_0_010_00100_0100011       //0x60// ...                       | sw     x8  x0  0x004
80_00_4D_37 // 0000000_01000_0000______/ 001_1_0_11_1_0_1_001_1_01 //0x64// ...                       | c.jal  0x7D1 (to 0x08)    // to OutputTestPort
13_08_C0_00 // 000000001100_00000_000_10000_0010011                //0x68// addi   x16 x0  0x00C                                  // store addr of Mult
02_98_01_00 // 100_1_10000_00000_10    | 000_0_00000_00000_01      //0x6C// c.jalr x16                | c.nop                     // to Mult
13_04_00_80 // 100000000000_00000_000_01000_0010011                //0x70// addi   x8  x0  0x800
2D_84_13_44 // 100_0_01_000_01011_01   |_0_100_01000_0010011       //0x74// c.srai x8  x8  11         | xori   x8  x8  0x2A2
24_2A_79_37 // 001010100010_0100_______/ 001_1_0_11_1_0_1_111_0_01 //0x78// ...                       | c.jal  0x7C7 (to 0x08)    // to OutputTestPort
13_00_00_00 // 000000000000_00000_000_00000_0010011                //0x7C// nop

// Notes:
//     Required supporting compression instructions with offset settings:
//         c.nop                    : decode to addi x0 x0 0x000
//         c.add  , c.mv            : no offset
//         c.addi , c.andi*         : sign-extended offset[ 5:0] ( 6 bits)
//         c.slli , c.srli*, c.srai*: shamt[5:0], shamt[5] must be 0
//         c.sw*  , c.lw*           : zero-extended offset[ 6:2] ( 5 bits)
//         c.beqz*, c.bnez*         : sign-extended offset[ 8:1] ( 8 bits)
//         c.j    , c.jal^          : sign-extended offset[11:1] (11 bits)
//         c.jr   , c.jalr^         : no offset
//     *: limited register index (x8 ~ x15)
//     ^: stores pc+2 to x1

// Explanation: The DEADline of the Final project is "625". (XD)

// testoutput : store register r8 to memory 64
// Inst. Addr. //      Label     //        Instruction                            //               Comment
//---------------------------------------------------------------------------------------------------------------------
//    0x00     //                 nop
//    0x04     //                 c.nop                   | c.j    Main
//    0x08     // OutputTestPort: c.sw   x8  x14 0x10     | c.jr   x1             // return OutputTestPort
//    0x0C     // Mult          : addi   x2  x1  0x002                            // modify return addr
//    0x10     //                 c.lw   x9  x14 0x00     | c.lw   x10 x14 0x01   // x9 = 0x0000DEAD, x10 = 0x0000F625
//    0x14     //                 c.slli x9  x9  15       | addi   x15 x0  0x010  // x15 = 16 (end condition)
//    0x18     //                 ...                     | c.mv   x13 x14        // reset product x13
//    0x1C     // MultLoop      : c.mv   x11 x10          | c.andi x11 x11 0x01   // extract LSB
//    0x20     //                 c.mv   x12 x14          | c.beqz x11 End        // reset addend
//    0x24     //                 add    x12 x12 x9                               // x12 = (LSB == 0) ? 32'h0 : x9
//    0x28     // End           : c.srli x13 x13 1        | c.add  x13 x13 x12    // right shift | addition
//    0x2C     //                 c.mv   x8  x13          | c.jal  OutputTestPort // check each iteration
//    0x30     //                 c.srli x10 x10 1        | c.addi x15 x15 0x3F   // renew LSB | x15 = x15 - 1
//    0x34     //                 c.bnez x15 MultLoop     | sw     x13 x0  0x008  // loop condition | store mult result
//    0x38     //                 ...                     | c.jr   x2             // return Mult
//    0x3C     // Main          : addi   x8  x0  0x168
//    0x40     //                 addi   x14 x0  0x000                            // x14 = 0 (for RV32C inst.)
//    0x44     //                 jal    x1  OutputTestPort
//    0x48     //                 addi   x8  x0  0x0DE
//    0x4C     //                 c.slli x8  x8  8        | addi   x8  x8  0x0AD
//    0x50     //                 ...                     | sw     x8  x0  0x000
//    0x54     //                 ...                     | c.jal  OutputTestPort
//    0x58     //                 addi   x8  x0  0x0F6
//    0x5C     //                 c.slli x8  x8  8        | addi   x8  x8  0x025
//    0x60     //                 ...                     | sw     x8  x0  0x004
//    0x64     //                 ...                     | c.jal  OutputTestPort
//    0x68     //                 addi   x16 x0  Mult                             // generate addr
//    0x6C     //                 c.jalr x16              | c.nop
//    0x70     //                 addi   x8  x0  0x100                            // x8 = 0xFFFFF800
//    0x74     //                 c.srai x8  x8  11       | xori   x8 x8 0x2A2    // x8 = 0xFFFFFFFF | x8 = 0xFFFFFD5D
//    0x78     //                 ...                     | c.jal  OutputTestPort
//    0x7C     //                 nop

// Operation:
//     0x0000DEAD * 0x0000F625 = 0xD61A6D01
//
//                0000_0000_0000_0000_1101_1110_1010_1101
//             *) 0000_0000_0000_0000_1111_0110_0010_0101
//             -------------------------------------------------
//                1101_0110_0001_1010_0110_1101_0000_0001
//
//
//      0)
//         LSB = 1 -> add 110_1111_0101_0110_1
//         Addition:
//                0000_0000_0000_0000_0000_0000_0000_0000 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0000_0000_0000_0000
//             +)  110_1111_0101_0110_1
//             -------------------------------------------------
//                0110_1111_0101_0110_1000_0000_0000_0000
//         Renew LSB:
//                0000_0000_0000_0000_1111_0110_0010_0101 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0111_1011_0001_0010
//
//      1)
//         LSB = 0 -> add 000_0000_0000_0000_0
//         Addition:
//                0110_1111_0101_0110_1000_0000_0000_0000 >> 1
//             -------------------------------------------------
//                0011_0111_1010_1011_0100_0000_0000_0000
//             +)  000_0000_0000_0000_0
//             -------------------------------------------------
//                0011_0111_1010_1011_0100_0000_0000_0000
//         Renew LSB:
//                0000_0000_0000_0000_0111_1011_0001_0010 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0011_1101_1000_1001
//
//      2)
//         LSB = 1 -> add 110_1111_0101_0110_1
//         Addition:
//                0011_0111_1010_1011_0100_0000_0000_0000 >> 1
//             -------------------------------------------------
//                0001_1011_1101_0101_1010_0000_0000_0000
//             +)  110_1111_0101_0110_1
//             -------------------------------------------------
//                1000_1011_0010_1100_0010_0000_0000_0000
//         Renew LSB:
//                0000_0000_0000_0000_0011_1101_1000_1001 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0001_1110_1100_0100
//
//      3)
//         LSB = 0 -> add 000_0000_0000_0000_0
//         Addition:
//                1000_1011_0010_1100_0010_0000_0000_0000 >> 1
//             -------------------------------------------------
//                0100_0101_1001_0110_0001_0000_0000_0000
//             +)  000_0000_0000_0000_0
//             -------------------------------------------------
//                0100_0101_1001_0110_0001_0000_0000_0000
//         Renew LSB:
//                0000_0000_0000_0000_0001_1110_1100_0100 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0000_1111_0110_0010
//
//      4)
//         LSB = 0 -> add 000_0000_0000_0000_0
//         Addition:
//                0100_0101_1001_0110_0001_0000_0000_0000 >> 1
//             -------------------------------------------------
//                0010_0010_1100_1011_0000_1000_0000_0000
//             +)  000_0000_0000_0000_0
//             -------------------------------------------------
//                0010_0010_1100_1011_0000_1000_0000_0000
//         Renew LSB:
//                0000_0000_0000_0000_0000_1111_0110_0010 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0000_0111_1011_0001
//
//      5)
//         LSB = 1 -> add 110_1111_0101_0110_1
//         Addition:
//                0010_0010_1100_1011_0000_1000_0000_0000 >> 1
//             -------------------------------------------------
//                0001_0001_0110_0101_1000_0100_0000_0000
//             +)  110_1111_0101_0110_1
//             -------------------------------------------------
//                1000_0000_1011_1100_0000_0100_0000_0000
//         Renew LSB:
//                0000_0000_0000_0000_0000_0111_1011_0001 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0000_0011_1101_1000
//
//      6)
//         LSB = 0 -> add 000_0000_0000_0000_0
//         Addition:
//                1000_0000_1011_1100_0000_0100_0000_0000 >> 1
//             -------------------------------------------------
//                0100_0000_0101_1110_0000_0010_0000_0000
//             +)  000_0000_0000_0000_0
//             -------------------------------------------------
//                0100_0000_0101_1110_0000_0010_0000_0000
//         Renew LSB:
//                0000_0000_0000_0000_0000_0011_1101_1000 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0000_0001_1110_1100
//
//      7)
//         LSB = 0 -> add 000_0000_0000_0000_0
//         Addition:
//                0100_0000_0101_1110_0000_0010_0000_0000 >> 1
//             -------------------------------------------------
//                0010_0000_0010_1111_0000_0001_0000_0000
//             +)  000_0000_0000_0000_0
//             -------------------------------------------------
//                0010_0000_0010_1111_0000_0001_0000_0000
//         Renew LSB:
//                0000_0000_0000_0000_0000_0001_1110_1100 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0000_0000_1111_0110
//
//      8)
//         LSB = 0 -> add 000_0000_0000_0000_0
//         Addition:
//                0010_0000_0010_1111_0000_0001_0000_0000 >> 1
//             -------------------------------------------------
//                0001_0000_0001_0111_1000_0000_1000_0000
//             +)  000_0000_0000_0000_0
//             -------------------------------------------------
//                0001_0000_0001_0111_1000_0000_1000_0000
//         Renew LSB:
//                0000_0000_0000_0000_0000_0000_1111_0110 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0000_0000_0111_1011
//
//      9)
//         LSB = 1 -> add 110_1111_0101_0110_1
//         Addition:
//                0001_0000_0001_0111_1000_0000_1000_0000 >> 1
//             -------------------------------------------------
//                0000_1000_0000_1011_1100_0000_0100_0000
//             +)  110_1111_0101_0110_1
//             -------------------------------------------------
//                0111_0111_0110_0010_0100_0000_0100_0000
//         Renew LSB:
//                0000_0000_0000_0000_0000_0000_0111_1011 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0000_0000_0011_1101
//
//     10)
//         LSB = 1 -> add 110_1111_0101_0110_1
//         Addition:
//                0111_0111_0110_0010_0100_0000_0100_0000 >> 1
//             -------------------------------------------------
//                0011_1011_1011_0001_0010_0000_0010_0000
//             +)  110_1111_0101_0110_1
//             -------------------------------------------------
//                1010_1011_0000_0111_1010_0000_0010_0000
//         Renew LSB:
//                0000_0000_0000_0000_0000_0000_0011_1101 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0000_0000_0001_1110
//
//     11)
//         LSB = 0 -> add 000_0000_0000_0000_0
//         Addition:
//                1010_1011_0000_0111_1010_0000_0010_0000 >> 1
//             -------------------------------------------------
//                0101_0101_1000_0011_1101_0000_0001_0000
//             +)  000_0000_0000_0000_0
//             -------------------------------------------------
//                0101_0101_1000_0011_1101_0000_0001_0000
//         Renew LSB:
//                0000_0000_0000_0000_0000_0000_0001_1110 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0000_0000_0000_1111
//
//     12)
//         LSB = 1 -> add 110_1111_0101_0110_1
//         Addition:
//                0101_0101_1000_0011_1101_0000_0001_0000 >> 1
//             -------------------------------------------------
//                0010_1010_1100_0001_1110_1000_0000_1000
//             +)  110_1111_0101_0110_1
//             -------------------------------------------------
//                1001_1010_0001_1000_0110_1000_0000_1000
//         Renew LSB:
//                0000_0000_0000_0000_0000_0000_0000_1111 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0000_0000_0000_0111
//
//     13)
//         LSB = 1 -> add 110_1111_0101_0110_1
//         Addition:
//                1001_1010_0001_1000_0110_1000_0000_1000 >> 1
//             -------------------------------------------------
//                0100_1101_0000_1100_0011_0100_0000_0100
//             +)  110_1111_0101_0110_1
//             -------------------------------------------------
//                1011_1100_0110_0010_1011_0100_0000_0100
//         Renew LSB:
//                0000_0000_0000_0000_0000_0000_0000_0111 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0000_0000_0000_0011
//
//     14)
//         LSB = 1 -> add 110_1111_0101_0110_1
//         Addition:
//                1011_1100_0110_0010_1011_0100_0000_0100 >> 1
//             -------------------------------------------------
//                0101_1110_0011_0001_0101_1010_0000_0010
//             +)  110_1111_0101_0110_1
//             -------------------------------------------------
//                1100_1101_1000_0111_1101_1010_0000_0010
//         Renew LSB:
//                0000_0000_0000_0000_0000_0000_0000_0011 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0000_0000_0000_0001
//
//     15)
//         LSB = 1 -> add 110_1111_0101_0110_1
//         Addition:
//                1100_1101_1000_0111_1101_1010_0000_0010 >> 1
//             -------------------------------------------------
//                0110_0110_1100_0011_1110_1101_0000_0001
//             +)  110_1111_0101_0110_1
//             -------------------------------------------------
//                1101_0110_0001_1010_0110_1101_0000_0001
//         Renew LSB:
//                0000_0000_0000_0000_0000_0000_0000_0001 >> 1
//             -------------------------------------------------
//                0000_0000_0000_0000_0000_0000_0000_0000
//
//
//
